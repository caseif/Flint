// Apply Gradle plugins
plugins {
    id 'java'
    id 'maven'
    id 'eclipse'
    id 'idea'
    id 'checkstyle'

    id 'com.github.hierynomus.license' version '0.11.0'
}

defaultTasks 'clean', 'licenseFormat', 'build'

// Project information
group = 'net.caseif.flint'
version = '1.0.0-SNAPSHOT'

// Extended project information
ext.projectName = 'flint'
ext.description = 'A framework for Minecraft minigame mods.'
ext.inceptionYear = '2015'
ext.packaging = 'jar'

sourceCompatibility = 1.7
targetCompatibility = 1.7

configurations {
    deployerJars
}


// Project repositories
repositories {
    mavenCentral()
    maven { url 'http://repo.caseif.net/content/groups/public/' }
}

// Project dependencies
dependencies {
    compile 'com.google.guava:guava:17.0'
    compile 'com.flowpowered:flow-math:1.0.0'

    deployerJars 'org.apache.maven.wagon:wagon-ssh:2.8'
}

// Read source files using UTF-8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

processResources {
    from 'LICENSE'
}

// License header formatting
license {
    header file('LICENSE')
    excludes([
            '**/*.properties',
            '**/*.yml'
    ])
    sourceSets = project.sourceSets
    ignoreFailures false
    strictCheck true
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

// check code style
checkstyle {
    configProperties = [
            'name'		: project.name,
            'year'		: project.inceptionYear
    ]
    configFile = file('etc/checkstyle.xml')
}

tasks.withType(Checkstyle){
    exclude '**/*.properties'
    exclude '**/*.yml'
}

task sourceJar(type: Jar) {
    from sourceSets.main.java
    from sourceSets.main.resources
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

uploadArchives {
    repositories.mavenDeployer {
        setUniqueVersion(true)
        configuration = configurations.deployerJars
        if (project.hasProperty('mavenRepo')) {
            repository(url: project.property('mavenRepo')) {
                authentication(userName: project.property('mavenUser'), password: project.property('mavenPass'))
            }
        }

        pom {
            groupId = project.group
            version = project.version
            artifactId = project.ext.projectName
            project {
                packaging 'jar'
                description project.ext.description
                url 'http://github.com/caseif/Flint'

                scm {
                    url 'https://github.com/caseif/Flint'
                    connection 'scm:git:git://github.com/caseif/Flint.git'
                    developerConnection 'scm:git:git@github.com:caseif/Flint.git'
                }

                licenses {
                    license {
                        name 'MIT license'
                        url 'http://opensource.org/licenses/MIT'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}
