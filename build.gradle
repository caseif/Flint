plugins {
    id 'java'
    id 'maven'
    id 'eclipse'
    id 'idea'
    id 'checkstyle'
    id 'net.minecrell.licenser' version '0.2.1'
}

defaultTasks 'clean', 'updateLicenses', 'build'

// Project information
group = 'net.caseif.flint'
version = '1.3.2'

// Extended project information
ext.projectName = 'flint'
ext.description = 'A framework for (Minecraft) minigame mods.'
ext.inceptionYear = '2015'
ext.packaging = 'jar'
ext.author = 'Max Roncace'
ext.versionSuffix = version.contains('SNAPSHOT') ? (
        (
        System.getenv('GIT_COMMIT') ? ('-git('
                + System.getenv('GIT_BRANCH')
                .substring(System.getenv('GIT_BRANCH').split('/')[0].length() + 1) + '-'
                + System.getenv('GIT_COMMIT').substring(0, 7) + ')') : ''
        )
        + (System.getenv('BUILD_NUMBER') ? '-jnks' + System.getenv('BUILD_NUMBER') : '')
) : ''

sourceCompatibility = 1.7
targetCompatibility = 1.7

configurations {
    deployerJars
}

// Project repositories
repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'http://repo.caseif.net/content/groups/public/' }
}

// Project dependencies
dependencies {
    compile 'com.google.guava:guava:17.0'

    testCompile 'junit:junit:4.12'

    deployerJars 'org.apache.maven.wagon:wagon-ssh:2.9'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

processResources {
    from 'LICENSE'
}

// License header formatting
license {
    include '**/*.java'
    ignoreFailures false
}

// check code style
checkstyle {
    configProperties = [
            'name'        : project.name,
            'year'        : project.inceptionYear
    ]
    configFile = file('etc/checkstyle.xml')
}

tasks.withType(Checkstyle){
    exclude '**/*.properties'
    exclude '**/*.yml'
}

jar.manifest.mainAttributes(
        'Created-By': System.properties['java.vm.version'] + " (" + System.properties['java.vm.vendor'] + ")",
        'Specification-Title': name,
        'Specification-Version': version + versionSuffix,
        'Specitication-Vendor': author
)

task sourceJar(type: Jar) {
    from sourceSets.main.java
    from sourceSets.main.resources
    classifier = 'sources'
}

javadoc {
    options.encoding = 'UTF-8'
    options.charSet = 'UTF-8'
    options.links(
            'https://google.github.io/guava/releases/17.0/api/docs/',
            'https://docs.oracle.com/javase/7/docs/api/'
    )
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}

uploadArchives {
    repositories.mavenDeployer {
        setUniqueVersion(true)
        configuration = configurations.deployerJars
        if (project.hasProperty('mavenRepo')) {
            repository(url: project.property('mavenRepo')) {
                authentication(userName: project.property('mavenUser'), password: project.property('mavenPass'))
            }
        }

        pom {
            groupId = project.group
            version = project.version
            artifactId = project.ext.projectName
            project {
                packaging 'jar'
                description project.ext.description
                url 'http://github.com/caseif/Flint'

                scm {
                    url 'https://github.com/caseif/Flint'
                    connection 'scm:git:git://github.com/caseif/Flint.git'
                    developerConnection 'scm:git:git@github.com:caseif/Flint.git'
                }

                licenses {
                    license {
                        name 'BSD 3-Clause'
                        url 'http://opensource.org/licenses/BSD-3-clause'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}
